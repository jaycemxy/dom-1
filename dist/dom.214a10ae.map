{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","i","length","push","empty2","x","attr","name","value","arguments","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","each","nodeList","call","index","list"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AACTC,UADS,kBACFC,MADE,EACM;AAAG;AACd,YAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,kBAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB,CAFW,CAE2B;AACtC,eAAOJ,UAAUK,OAAV,CAAkBC,UAAzB;AACH,KALQ;AAMTC,SANS,iBAMHC,IANG,EAMEC,KANF,EAMS;AAAG;AACjB;AACAD,aAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,KAAKI,WAAzC;AACH,KATQ;AAUTC,UAVS,kBAUFL,IAVE,EAUGC,KAVH,EAUU;AAAG;AAClBD,aAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAmCD,IAAnC;AACH,KAZQ;AAaTM,UAbS,kBAaFC,MAbE,EAaKP,IAbL,EAaW;AAAG;AACnBO,eAAOC,WAAP,CAAmBR,IAAnB;AACH,KAfQ;AAgBTS,QAhBS,gBAgBJT,IAhBI,EAgBCO,MAhBD,EAgBS;AAAG;AACjBlB,YAAIgB,MAAJ,CAAWL,IAAX,EAAiBO,MAAjB;AACAlB,YAAIiB,MAAJ,CAAWC,MAAX,EAAmBP,IAAnB;AACH,KAnBQ;AAoBTU,UApBS,kBAoBFV,IApBE,EAoBI;AACTA,aAAKE,UAAL,CAAgBS,WAAhB,CAA4BX,IAA5B;AACA,eAAOA,IAAP;AACH,KAvBQ;AAwBTY,SAxBS,iBAwBHZ,IAxBG,EAwBG;AAAA,YACDa,UADC,GACab,IADb,CACDa,UADC,EACmB;;AAC3B,YAAMC,QAAQ,EAAd;AACA,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAIF,WAAWG,MAAX,GAAkB,CAApC,EAAuCD,GAAvC,EAA4C;AACxC1B,gBAAIqB,MAAJ,CAAWG,WAAWE,CAAX,CAAX;AACAD,kBAAMG,IAAN,CAAWJ,WAAWE,CAAX,CAAX;AACH;AACD,eAAOD,KAAP;AACH,KAhCQ;AAiCTI,UAjCS,kBAiCFlB,IAjCE,EAiCI;AACT,YAAMc,QAAQ,EAAd;AACA,YAAIK,IAAInB,KAAKF,UAAb;AACA,eAAMqB,CAAN,EAAS;AACLL,kBAAMG,IAAN,CAAW5B,IAAIqB,MAAJ,CAAWV,KAAKF,UAAhB,CAAX;AACAqB,gBAAInB,KAAKF,UAAT;AACH;AACD,eAAOgB,KAAP;AACH,KAzCQ;AA0CTM,QA1CS,gBA0CJpB,IA1CI,EA0CEqB,IA1CF,EA0CQC,KA1CR,EA0Ce;AAAG;AACvB,YAAGC,UAAUP,MAAV,KAAqB,CAAxB,EAA0B;AACtBhB,iBAAKwB,YAAL,CAAkBH,IAAlB,EAAwBC,KAAxB;AACH,SAFD,MAEO,IAAGC,UAAUP,MAAV,KAAqB,CAAxB,EAA0B;AAC7B,mBAAOhB,KAAKyB,YAAL,CAAkBJ,IAAlB,CAAP;AACH;AACJ,KAhDQ;AAiDTK,QAjDS,gBAiDJ1B,IAjDI,EAiDCT,MAjDD,EAiDS;AAAI;AAClB,YAAGgC,UAAUP,MAAV,KAAqB,CAAxB,EAA0B;AACtB,gBAAG,eAAehB,IAAlB,EAAwB;AACpBA,qBAAK2B,SAAL,GAAiBpC,MAAjB,CADoB,CACM;AAC7B,aAFD,MAEO;AACHS,qBAAK4B,WAAL,GAAmBrC,MAAnB,CADG,CACyB;AAC/B;AACJ,SAND,MAMO,IAAGgC,UAAUP,MAAV,KAAqB,CAAxB,EAA2B;AAC9B,gBAAG,eAAehB,IAAlB,EAAwB;AACpB,uBAAOA,KAAK2B,SAAZ;AACH,aAFD,MAEO;AACH,uBAAO3B,KAAK4B,WAAZ;AACH;AACJ;AACJ,KA/DQ;AAgETC,QAhES,gBAgEJ7B,IAhEI,EAgECT,MAhED,EAgES;AACd,YAAGgC,UAAUP,MAAV,KAAqB,CAAxB,EAA2B;AACvBhB,iBAAKL,SAAL,GAAiBJ,MAAjB;AACH,SAFD,MAEO,IAAIgC,UAAUP,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,mBAAOhB,KAAKL,SAAZ;AACH;AACJ,KAtEQ;AAuETmC,SAvES,iBAuEH9B,IAvEG,EAuEGqB,IAvEH,EAuESC,KAvET,EAuEgB;AACrB,YAAGC,UAAUP,MAAV,KAAqB,CAAxB,EAA2B;AACvB;AACAhB,iBAAK8B,KAAL,CAAWT,IAAX,IAAmBC,KAAnB;AACH,SAHD,MAGM,IAAGC,UAAUP,MAAV,KAAqB,CAAxB,EAA2B;AAC7B;AACA,gBAAG,OAAOK,IAAP,KAAgB,QAAnB,EAA4B;AACxB,uBAAOrB,KAAK8B,KAAL,CAAWT,IAAX,CAAP;AACH,aAFD,MAEO,IAAGA,gBAAgBU,MAAnB,EAA0B;AAC7B;AACA,oBAAMC,SAASX,IAAf;AACA,qBAAI,IAAIY,GAAR,IAAeD,MAAf,EAAuB;AACnBhC,yBAAK8B,KAAL,CAAWG,GAAX,IAAkBD,OAAOC,GAAP,CAAlB;AACH;AACJ;AACJ;AACJ,KAvFQ;;AAwFTC,WAAO;AACHC,WADG,eACCnC,IADD,EACOoC,SADP,EACkB;AACjBpC,iBAAKqC,SAAL,CAAeF,GAAf,CAAmBC,SAAnB;AACH,SAHE;AAIH1B,cAJG,kBAIIV,IAJJ,EAIUoC,SAJV,EAIqB;AACpBpC,iBAAKqC,SAAL,CAAe3B,MAAf,CAAsB0B,SAAtB;AACH,SANE;AAOHE,WAPG,eAOEtC,IAPF,EAOQoC,SAPR,EAOmB;AAClB,mBAAOpC,KAAKqC,SAAL,CAAeE,QAAf,CAAwBH,SAAxB,CAAP;AACH;AATE,KAxFE;AAmGTI,MAnGS,cAmGNxC,IAnGM,EAmGAyC,SAnGA,EAmGWC,EAnGX,EAmGe;AACpB1C,aAAK2C,gBAAL,CAAsBF,SAAtB,EAAiCC,EAAjC;AACH,KArGQ;AAsGTE,OAtGS,eAsGL5C,IAtGK,EAsGCyC,SAtGD,EAsGYC,EAtGZ,EAsGgB;AACrB1C,aAAK6C,mBAAL,CAAyBJ,SAAzB,EAAoCC,EAApC;AACH,KAxGQ;AAyGTI,QAzGS,gBAyGJC,QAzGI,EAyGKC,KAzGL,EAyGY;AAAG;AACrB,eAAO,CAACA,SAASvD,QAAV,EAAoBwD,gBAApB,CAAqCF,QAArC,CAAP;AACF,KA3GQ;AA4GTG,YA5GS,oBA4GAlD,IA5GA,EA4GM;AACX,eAAOA,KAAKkD,QAAZ;AACH,KA9GQ;AA+GTC,YA/GS,oBA+GAnD,IA/GA,EA+GM;AAAG;AACd,eAAOoD,MAAMC,IAAN,CAAWrD,KAAKE,UAAL,CAAgBgD,QAA3B,EAAqCI,MAArC,CAA4C;AAAA,mBAAGC,MAAIvD,IAAP;AAAA,SAA5C,CAAP;AACH,KAjHQ;AAkHTwD,QAlHS,gBAkHJxD,IAlHI,EAkHE;AACP,YAAImB,IAAInB,KAAKI,WAAb;AACA,eAAMe,KAAKA,EAAEsC,QAAF,KAAe,CAA1B,EAA6B;AAAG;AAC5BtC,gBAAIA,EAAEf,WAAN;AACH;AACD,eAAOe,CAAP;AACH,KAxHQ;AAyHTuC,QAzHS,gBAyHJC,QAzHI,EAyHMjB,EAzHN,EAyHU;AACf,aAAI,IAAI3B,IAAE,CAAV,EAAaA,IAAI4C,SAAS3C,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC2B,eAAGkB,IAAH,CAAQ,IAAR,EAAcD,SAAS5C,CAAT,CAAd;AACH;AACJ,KA7HQ;AA8HT8C,SA9HS,iBA8HH7D,IA9HG,EA8HG;AAAG;AACX,YAAM8D,OAAOzE,IAAI6D,QAAJ,CAAalD,KAAKE,UAAlB,CAAb;AACA,YAAIa,UAAJ;AACA,aAAIA,IAAE,CAAN,EAASA,IAAE+C,KAAK9C,MAAhB,EAAwBD,GAAxB,EAA6B;AACzB,gBAAG+C,KAAK/C,CAAL,MAAYf,IAAf,EAAqB;AACjB;AACH;AACJ;AACD,eAAOe,CAAP;AACH;AAvIQ,CAAb","file":"dom.214a10ae.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n    create(string) {  // 创建节点\n        const container = document.createElement(\"template\");\n        container.innerHTML = string.trim();  // trim()去掉字符串左右两边的空格\n        return container.content.firstChild;\n    },\n    after(node,node2) {  // 新增弟弟\n        // console.log(node.nextSibling);\n        node.parentNode.insertBefore(node2, node.nextSibling);\n    },\n    before(node,node2) {  // 新增哥哥\n        node.parentNode.insertBefore(node2,node);\n    },\n    append(parent,node) {  // 新增儿子\n        parent.appendChild(node);\n    },\n    wrap(node,parent) {  // 新增爸爸\n        dom.before(node, parent);\n        dom.append(parent, node);\n    },\n    remove(node) {\n        node.parentNode.removeChild(node)\n        return node\n    },\n    empty(node) {\n        const {childNodes} = node  // 等价于 const childNodes = node.childNodes\n        const array = []\n        for (let i=0; i < childNodes.length-1; i++) {\n            dom.remove(childNodes[i])\n            array.push(childNodes[i])\n        }\n        return array\n    },\n    empty2(node) {\n        const array = []\n        let x = node.firstChild\n        while(x) {\n            array.push(dom.remove(node.firstChild))\n            x = node.firstChild\n        } \n        return array\n    },\n    attr(node, name, value) {  // 重载\n        if(arguments.length === 3){\n            node.setAttribute(name, value)\n        } else if(arguments.length === 2){\n            return node.getAttribute(name)\n        }\n    },\n    text(node,string) {   // 适配\n        if(arguments.length === 2){\n            if('innerText' in node) {\n                node.innerText = string;  // IE浏览器\n            } else {\n                node.textContent = string;  // Chrome、firefox浏览器\n            }\n        } else if(arguments.length === 1) {\n            if('innerText' in node) {\n                return node.innerText\n            } else {\n                return node.textContent\n            }\n        }\n    },\n    html(node,string) {\n        if(arguments.length === 2) {\n            node.innerHTML = string\n        } else if (arguments.length === 1) {\n            return node.innerHTML\n        }\n    },\n    style(node, name, value) {\n        if(arguments.length === 3) {\n            // dom.style(div, 'color', 'red')\n            node.style[name] = value\n        }else if(arguments.length === 2) {\n            // dom.style(div, 'color')\n            if(typeof name === 'string'){\n                return node.style[name]\n            } else if(name instanceof Object){\n                // dom.style(div, {color: 'red'})\n                const object = name\n                for(let key in object) {\n                    node.style[key] = object[key]\n                }\n            }\n        }\n    },\n    class: {\n        add(node, className) {\n            node.classList.add(className)\n        },\n        remove(node, className) {\n            node.classList.remove(className)\n        },\n        has (node, className) {\n            return node.classList.contains(className)\n        }\n    },\n    on(node, eventName, fn) {\n        node.addEventListener(eventName, fn)\n    },\n    off(node, eventName, fn) {\n        node.removeEventListener(eventName, fn)\n    },\n    find(selector,scope) {  // scope指定查找范围，如果有第二个参数就在指定范围内查找\n       return (scope || document).querySelectorAll(selector)\n    },\n    children(node) {\n        return node.children\n    },\n    siblings(node) {  // 找到兄弟姐妹且要排除自己\n        return Array.from(node.parentNode.children).filter(n=>n!==node);\n    },\n    next(node) {\n        let x = node.nextSibling\n        while(x && x.nodeType === 3) {  // 判断是否为文本节点\n            x = x.nextSibling\n        }\n        return x\n    },\n    each(nodeList, fn) {\n        for(let i=0; i < nodeList.length; i++) {\n            fn.call(null, nodeList[i])\n        }\n    },\n    index(node) {  // 该节点排行老几\n        const list = dom.children(node.parentNode)\n        let i\n        for(i=0; i<list.length; i++) {\n            if(list[i] === node) {\n                break\n            }\n        }\n        return i\n    },\n}"]}