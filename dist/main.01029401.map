{"version":3,"sources":["main.js"],"names":["div","dom","create","after","test","div2","append","div3","wrap","nodes","empty2","window","empty","console","log","attr","title","text","style","border","color","class","add","remove","has","fn","on","off","divList","find","s2","siblings","next","t","each","children","n","index","t1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAMC,IAAIC,MAAJ,CAAW,0BAAX,CAAZ;AACAD,IAAIE,KAAJ,CAAUC,IAAV,EAAeJ,GAAf;;AAEA,IAAMK,OAAOJ,IAAIC,MAAJ,CAAW,yBAAX,CAAb;AACAD,IAAIK,MAAJ,CAAWF,IAAX,EAAiBC,IAAjB;;AAEA,IAAME,OAAON,IAAIC,MAAJ,CAAW,qCAAX,CAAb;AACAD,IAAIO,IAAJ,CAASJ,IAAT,EAAeG,IAAf;;AAEA;AACA;;AAEA,IAAME,QAAQR,IAAIS,MAAJ,CAAWC,OAAOC,KAAlB,CAAd;AACAC,QAAQC,GAAR,CAAYL,KAAZ;;AAEAR,IAAIc,IAAJ,CAASX,IAAT,EAAe,OAAf,EAAwB,OAAxB;AACA,IAAMY,QAAQf,IAAIc,IAAJ,CAASX,IAAT,EAAe,OAAf,CAAd;AACAS,QAAQC,GAAR,aAAsBE,KAAtB;;AAEAf,IAAIgB,IAAJ,CAASb,IAAT,EAAe,WAAf;;AAEAH,IAAIiB,KAAJ,CAAUd,IAAV,EAAgB,QAAhB,EAA0B,KAA1B,GAAkC;AAClCH,IAAIiB,KAAJ,CAAUd,IAAV,EAAgB,QAAhB,GAA4B;AAC5BH,IAAIiB,KAAJ,CAAUd,IAAV,EAAgB,EAACe,QAAQ,iBAAT,EAA4BC,OAAO,OAAnC,EAAhB,GAA+D;;AAE/DnB,IAAIoB,KAAJ,CAAUC,GAAV,CAAclB,IAAd,EAAoB,KAApB;AACAH,IAAIoB,KAAJ,CAAUE,MAAV,CAAiBnB,IAAjB,EAAuB,KAAvB;AACAS,QAAQC,GAAR,CAAYb,IAAIoB,KAAJ,CAAUG,GAAV,CAAcpB,IAAd,EAAoB,KAApB,CAAZ;;AAGA,IAAMqB,KAAK,SAALA,EAAK,GAAM;AACbZ,YAAQC,GAAR,CAAY,KAAZ;AACH,CAFD;AAGAb,IAAIyB,EAAJ,CAAOtB,IAAP,EAAa,OAAb,EAAsBqB,EAAtB;AACAxB,IAAI0B,GAAJ,CAAQvB,IAAR,EAAc,OAAd,EAAuBqB,EAAvB;;AAEA,IAAMG,UAAU3B,IAAI4B,IAAJ,CAAS,OAAT,EAAkB,CAAlB,CAAhB;AACAhB,QAAQC,GAAR,CAAYc,OAAZ;;AAGA,IAAME,KAAK7B,IAAI4B,IAAJ,CAAS,KAAT,EAAgB,CAAhB,CAAX;AACAhB,QAAQC,GAAR,CAAYb,IAAI8B,QAAJ,CAAaD,EAAb,CAAZ;AACAjB,QAAQC,GAAR,CAAYb,IAAI+B,IAAJ,CAASF,EAAT,CAAZ;;AAEA,IAAMG,IAAIhC,IAAI4B,IAAJ,CAAS,SAAT,EAAoB,CAApB,CAAV;AACA5B,IAAIiC,IAAJ,CAASjC,IAAIkC,QAAJ,CAAaF,CAAb,CAAT,EAA0B,UAACG,CAAD;AAAA,WAAOnC,IAAIiB,KAAJ,CAAUkB,CAAV,EAAa,OAAb,EAAsB,MAAtB,CAAP;AAAA,CAA1B;;AAEAvB,QAAQC,GAAR,CAAYb,IAAIoC,KAAJ,CAAUC,EAAV,CAAZ","file":"main.01029401.map","sourceRoot":"../src","sourcesContent":["const div = dom.create(\"<div>111. 我是插入的div</div>\");\ndom.after(test,div);\n\nconst div2 = dom.create(\"<div>333. 我是插入的儿子</div>\");\ndom.append(test, div2);\n\nconst div3 = dom.create('<div id=\"parent\">222. 我是插入的爸爸</div>');\ndom.wrap(test, div3);\n\n// const nodes = dom.empty(document.querySelector('#empty'));\n// console.log(nodes);\n\nconst nodes = dom.empty2(window.empty);\nconsole.log(nodes);\n\ndom.attr(test, 'title', 'joyce')\nconst title = dom.attr(test, 'title')\nconsole.log(`title: ${title}`);\n\ndom.text(test, '你好，这里是新内容');\n\ndom.style(test, 'border', 'red'); // arguments.length === 3\ndom.style(test, 'border');  // arguments.length === 2  && typeof name === string\ndom.style(test, {border: '1px solid green', color: 'green'});  // arguments.length === 2  && name instanceof Object\n\ndom.class.add(test, 'ccc')\ndom.class.remove(test, 'ddd')\nconsole.log(dom.class.has(test, 'ddd'))\n\n\nconst fn = () => {\n    console.log('点击了')\n}\ndom.on(test, 'click', fn)\ndom.off(test, 'click', fn)\n\nconst divList = dom.find('#test')[0]\nconsole.log(divList);\n\n\nconst s2 = dom.find('#s2')[0]\nconsole.log(dom.siblings(s2))\nconsole.log(dom.next(s2))\n\nconst t = dom.find('#travel')[0]\ndom.each(dom.children(t), (n) => dom.style(n, 'color', 'pink'))\n\nconsole.log(dom.index(t1))\n\n"]}